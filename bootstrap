#!/usr/bin/env sh
set -e

# Common constants
COLOR_RESET='\033[0m'
COLOR_GREEN='\033[0;32m'
COMPOSE_PROJECT_NAME="${COMPOSE_PROJECT_NAME:-${PWD##*/}}"
TEST_HOST="${TEST_HOST:-localhost}"

echo "Integration test host: ${TEST_HOST}"

get_exposed_port() {
  if [ -z $3 ]
  then
    docker compose port $1 $2 | cut -d: -f2
  else
    docker compose port --index=$3 $1 $2 | cut -d: -f2
  fi
}

report_start() {
  printf "Waiting for $1 ... "
}

report_done() {
  printf "${COLOR_GREEN}done${COLOR_RESET}\n"
}

wait_for() {
  printf 'Waiting for %s... ' $1
    counter="0"
    while true
    do
      if [ "$( docker compose ps | grep $1 | grep -c healthy )" -eq 1 ]; then
        break
      fi
      counter=$((counter+1))
      if [ "${counter}" -eq 120 ]; then
        echo " ERROR: container failed to start"
        exit 1
      fi
      sleep 1
    done
    echo 'done.'
}

# Ensure Docker is Running
echo "Docker Information:"
echo ""
docker version
echo ""

# Activate the virtual environment
if test -e env/bin/activate
then
  . ./env/bin/activate
fi

rm -rf build
mkdir -p build build/data

# Stop any running instances and clean up after them, then pull images
docker compose down --volumes --remove-orphans
docker compose up -d --quiet-pull

wait_for postgres

PGPORT=$(get_exposed_port postgres 5432)

echo "Running pgbench ... "
docker compose exec postgres /usr/bin/pgbench -i -U postgres postgres

printf "Loading fixture schema ... "
docker compose exec postgres /usr/bin/psql -U postgres -d postgres -q -o /dev/null -f /fixtures/schema.sql
report_done

printf "Generating fixture data ... "
python3 ci/generate-fixture-data.py -U postgres -h ${TEST_HOST} -p ${PGPORT} -d postgres
report_done

printf "Creating test backups ... "
docker compose exec postgres /usr/bin/pg_dump -Fc -U postgres -f /data/dump.not-compressed -d postgres --compress=0
docker compose exec postgres /usr/bin/pg_dump -Fc -U postgres -f /data/dump.compressed -d postgres --compress=9
docker compose exec postgres /usr/bin/pg_dump -Fc -U postgres -f /data/dump.no-data -d postgres --compress=0 -s
docker compose exec postgres /usr/bin/pg_dump -Fc -U postgres -f /data/dump.data-only -d postgres --compress=0 -a
docker compose exec postgres /usr/bin/pg_dump -Fc -U postgres -f /data/dump.inserts -d postgres --compress=0 --inserts
report_done

printf "Fixing permissions ... "
docker compose exec postgres chmod -R a+r /data
report_done

cat > build/test-environment<<EOF
export PGHOST=${TEST_HOST}
export PGPORT=${PGPORT}
export PGDATABASE=postgres
export PGUSER=postgres
export POSTGRES_URI=postgresql://postgres@${TEST_HOST}:${PGPORT}/postgres
EOF

printf "\nBootstrap complete\n\nDon't forget to \". build/test-environment\"\n"
