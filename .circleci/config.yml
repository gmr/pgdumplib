version: "2.1"
workflows:
  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
jobs:
  build:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: "Set Python Version"
          command: |
            pyenv versions
            pyenv global 3.7.0
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requires/testing.txt" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            sudo apt-get install -y postgresql libpq-dev postgresql-client postgresql-client-common
            python3 -m venv env
            . env/bin/activate
            pip install -r requires/testing.txt
            python3 setup.py develop
      - save_cache:
          paths:
            - ./env
          key: v1-dependencies-{{ checksum "requires/testing.txt" }}
      - run:
          name: bootstrap
          command: ./bootstrap
      - run:
          name: run tests
          command: |
            . env/bin/activate
            nosetests
            flake8 --output build/flake8.txt --tee
      - run:
          name: upload coverage
          command: |
            . env/bin/activate
            pip install codecov
            codecov  --file build/coverage.xml
  deploy:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: create .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = crad" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: deploy to pypi
          command: |
            python3 -m venv env
            source env/bin/activate
            pip3 install twine
            python3 setup.py sdist
            twine upload dist/*
